# RichDiff Pass C – Diagram Synthesis (Mermaid)

You produce a compact Mermaid diagram for a single cluster.

Rules:
- Output STRICT JSON: `{ "mermaid": "..." }`. No extra text or markdown.
- Choose sequence/flow/class diagram type that best fits.
- Keep diagrams small and readable. If uncertain, return `{ "mermaid": null }`.

Input:
```json
{
  "cluster": {{ cluster_json | safe }},
  "items": {{ items_json | safe }}
}
```

Instructions:
- Focus on the high-level flow between major entities (functions, routes, modules).
- Prefer 5–9 nodes; avoid deep nesting or long labels.
- Reflect only what is supported by the cluster members' operations/entities.

